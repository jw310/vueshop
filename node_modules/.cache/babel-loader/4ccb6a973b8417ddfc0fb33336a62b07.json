{"remainingRequest":"/Users/lchick1003/Documents/vue3esite/node_modules/thread-loader/dist/cjs.js!/Users/lchick1003/Documents/vue3esite/node_modules/babel-loader/lib/index.js!/Users/lchick1003/Documents/vue3esite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lchick1003/Documents/vue3esite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lchick1003/Documents/vue3esite/src/views/Orders.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lchick1003/Documents/vue3esite/src/views/Orders.vue","mtime":1575273047000},{"path":"/Users/lchick1003/Documents/vue3esite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lchick1003/Documents/vue3esite/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lchick1003/Documents/vue3esite/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lchick1003/Documents/vue3esite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lchick1003/Documents/vue3esite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $ from \"jquery\"; // 因為此元件無法使用 $ ，所以要先 import 才能使用\n\nexport default {\n  data: function data() {\n    return {\n      Orders: [],\n      pagination: {},\n      deleteId: '',\n      tempOrder: {},\n      isLoading: false,\n      // 讀取效果\n      status: {\n        fileUploading: false\n      }\n    };\n  },\n  methods: {\n    getOrders: function getOrders() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var vm = this;\n      var api = \"\".concat(process.env.VUE_APP_APIPATH, \"/api/\").concat(process.env.VUE_APP_CUSTOMPATH, \"/admin/orders?page=\").concat(page);\n      vm.isLoading = true;\n      this.$http.get(api).then(function (response) {\n        console.log(response.data); // api 回覆訊息\n\n        vm.isLoading = false;\n        vm.Orders = response.data.orders;\n        vm.pagination = response.data.pagination; // 分頁資訊\n        //console.log(vm.Orders);\n      });\n    },\n    deleteOrder: function deleteOrder() {\n      var vm = this; //console.log(vm.index);\n\n      var api = \"\".concat(process.env.VUE_APP_APIPATH, \"/api/\").concat(process.env.VUE_APP_CUSTOMPATH, \"/admin/order/\").concat(vm.deleteId);\n      this.$http.delete(api).then(function (response) {});\n    },\n    openModal: function openModal(item) {\n      //$('#productModal').modal('show'); //  確認有資料才 openModal\n      // ES6 方法 Object.assign()\n      this.tempOrder = Object.assign({}, item); // 如果直接 this.tempProduct = item，會有傳參考的特性\n      //$(\"#OrderModal\").modal(\"show\");\n    },\n    delModal: function delModal(item) {\n      $(\"#delOrderModal\").modal(\"show\");\n      this.deleteId = item.id; // 取得點選的 item.id\n      //console.log(item.id);\n    },\n    signout: function signout() {\n      //  對應 config 裡的 dev.env.js 的環境變數\n      //const api = 'https://vue-course-api.hexschool.io/logout';\n      var api = \"\".concat(process.env.VUE_APP_APIPATH, \"/logout\"); // api 伺服器路徑\n      // 申請apipath\n\n      var vm = this;\n      this.$http.post(api).then(function (response) {\n        console.log(response.data);\n\n        if (response.data.success) {\n          vm.$router.push('/login'); // 登入回到首頁\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.getOrders();\n  }\n};",{"version":3,"sources":["Orders.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA,OAAA,CAAA,MAAA,QAAA,C,CAAA;;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA,KALA;AAKA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,aAAA,EAAA;AADA;AANA,KAAA;AAUA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA,UAAA,IAAA,uEAAA,CAAA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,UAAA,GAAA,aAAA,OAAA,CAAA,GAAA,CAAA,eAAA,kBAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,gCAAA,IAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EADA,CACA;;AACA,QAAA,EAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,EAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,QAAA,EAAA,CAAA,UAAA,GAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAJA,CAIA;AACA;AACA,OANA;AAOA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,UAAA,EAAA,GAAA,IAAA,CADA,CAEA;;AACA,UAAA,GAAA,aAAA,OAAA,CAAA,GAAA,CAAA,eAAA,kBAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,0BAAA,EAAA,CAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA,CACA,CADA;AAEA,KAnBA;AAoBA,IAAA,SApBA,qBAoBA,IApBA,EAoBA;AACA;AACA;AACA,WAAA,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA,CAHA,CAGA;AACA;AACA,KAzBA;AA0BA,IAAA,QA1BA,oBA0BA,IA1BA,EA0BA;AACA,MAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,KAAA,CAAA,MAAA;AACA,WAAA,QAAA,GAAA,IAAA,CAAA,EAAA,CAFA,CAEA;AACA;AACA,KA9BA;AA+BA,IAAA,OA/BA,qBA+BA;AACA;AACA;AACA,UAAA,GAAA,aAAA,OAAA,CAAA,GAAA,CAAA,eAAA,YAAA,CAHA,CAIA;AACA;;AACA,UAAA,EAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,EADA,CACA;AACA;AACA,OALA;AAMA;AA5CA,GAbA;AA2DA,EAAA,OA3DA,qBA2DA;AACA,SAAA,SAAA;AACA;AA7DA,CAAA","sourcesContent":["<template>\n <div>\n    <loading :active.sync=\"isLoading\"></loading>\n     <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <h6 class=\"d-flex justify-content-between align-items-center mt-4 mb-4 text-muted\">\n              <span>管理介面</span>\n              <a class=\"d-flex align-items-center text-muted\" href=\"#\">\n                <span data-feather=\"plus-circle\"></span>\n              </a>\n            </h6>\n            <ul class=\"nav flex-column\">\n              <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/admin/products\">\n                  產品列表\n                </router-link>\n              </li>\n            </ul>\n            <ul class=\"nav flex-column\">\n              <li class=\"nav-item\">\n                <router-link class=\"nav-link\" to=\"/admin/orders\">\n                  訂單列表\n                </router-link>\n              </li>\n            </ul>\n            <ul class=\"nav flex-column\">\n              <li class=\"nav-item\">\n                <router-link class=\"nav-link\" to=\"/admin/coupons\">\n                  優惠券\n                </router-link>\n              </li>\n            </ul>\n            <ul class=\"nav flex-column\">\n              <li class=\"nav-item\">\n                <a href=\"#\" @click.prevent=\"signout\">登出</a>\n              </li>\n            </ul>\n    </nav>\n    <!-- <span>訂單列表</span> -->\n    <table class=\"table mt-4\">\n      <thead>\n        <tr>\n          <th>購買時間</th>\n          <th>訂購人</th>\n          <th>訂購人電話</th>\n          <th>購買品項</th>\n          <th>應付金額</th>\n          <th>是否付款</th>\n          <!-- <th width=\"80\">編輯</th> -->\n        </tr>\n      </thead>\n      <tbody>\n        <!--key 會產生警告(有 eslint 的話)，因為此時沒有資料，但不影響使用-->\n        <tr v-for=\"(item, key) in Orders\" :key=\"item.id\">\n          <td>{{item.create_at | timestamp}}</td>\n          <td>{{item.user.name}}</td>\n          <td>{{item.user.tel}}</td>\n          <td>{{item.products.product}}</td>\n          <td>{{item.total}}</td>\n          <td>\n            <span v-if=\"item.is_paid\" class=\"text-success\">已付款</span>\n            <span v-else>未付款</span>\n          </td>\n          <!-- <td>\n            <div style=\"display: inline-block;width: 100px;\">\n              <button class=\"btn btn-outline-primary btn-sm\" @click=\"\">編輯</button>\n              <button class=\"btn btn-outline-primary btn-sm\" @click=\"delModal(item)\">刪除</button>\n            </div>\n          </td> -->\n        </tr>\n      </tbody>\n    </table>\n    <!--頁籤列表-->\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" :class=\"{'disable': !pagination.has_pre}\">\n          <a class=\"page-link\" href=\"#\" aria-label=\"Previous\"\n            @click.prevent=\"getOrders(pagination.current_page - 1)\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">Previous</span>\n          </a>\n        </li>\n        <li\n          class=\"page-item\" v-for=\"page in pagination.total_pages\" :key=\"page\"\n          :class=\"{'active': pagination.current_page === page}\">\n          <a class=\"page-link\" href=\"#\" @click.prevent=\"getOrders(page)\">{{ page }}</a>\n        </li>\n        <li class=\"page-item\">\n          <a class=\"page-link\" href=\"#\" aria-label=\"Next\"\n            @click.prevent=\"getOrders(pagination.current_page + 1)\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n\n    <!--deleteModal-->\n    <div\n      class=\"modal fade\"\n      id=\"delOrderModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content border-0\">\n          <div class=\"modal-header bg-danger text-white\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n              <span>刪除產品</span>\n            </h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            是否刪除\n            <strong class=\"text-danger\">{{ tempOrder.title }}</strong> 商品(刪除後將無法恢復)。\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">取消</button>\n            <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteOrder\">確認刪除</button>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport $ from \"jquery\"; // 因為此元件無法使用 $ ，所以要先 import 才能使用\n\nexport default {\n  data() {\n    return {\n      Orders: [],\n      pagination: {},\n      deleteId: '',\n      tempOrder: {},\n      isLoading: false, // 讀取效果\n      status: {\n        fileUploading: false\n      }\n    };\n  },\n  methods: {\n    getOrders(page = 1) {\n      const vm = this;\n      const api = `${process.env.VUE_APP_APIPATH}/api/${process.env.VUE_APP_CUSTOMPATH}/admin/orders?page=${page}`;\n      vm.isLoading = true;\n      this.$http.get(api).then(response => {\n        console.log(response.data);   // api 回覆訊息\n        vm.isLoading = false;\n        vm.Orders = response.data.orders;\n        vm.pagination = response.data.pagination; // 分頁資訊\n        //console.log(vm.Orders);\n      });\n    },\n    deleteOrder() {\n      const vm = this;\n      //console.log(vm.index);\n      const api = `${process.env.VUE_APP_APIPATH}/api/${process.env.VUE_APP_CUSTOMPATH}/admin/order/${vm.deleteId}`;\n      this.$http.delete(api).then(response => {\n      });\n    },\n    openModal(item) {\n      //$('#productModal').modal('show'); //  確認有資料才 openModal\n      // ES6 方法 Object.assign()\n      this.tempOrder = Object.assign({}, item); // 如果直接 this.tempProduct = item，會有傳參考的特性\n      //$(\"#OrderModal\").modal(\"show\");\n    },\n    delModal(item) {\n      $(\"#delOrderModal\").modal(\"show\");\n      this.deleteId = item.id; // 取得點選的 item.id\n      //console.log(item.id);\n    },\n    signout() {\n   //  對應 config 裡的 dev.env.js 的環境變數\n   //const api = 'https://vue-course-api.hexschool.io/logout';\n   const api = `${process.env.VUE_APP_APIPATH}/logout` ;\n   // api 伺服器路徑\n   // 申請apipath\n   const vm = this;\n   this.$http.post(api).then((response) => {\n   console.log(response.data);\n   if (response.data.success) {\n          vm.$router.push('/login');    // 登入回到首頁\n        } \n      });\n    },\n  },\n  created() {\n    this.getOrders();\n  }\n};\n</script>"],"sourceRoot":"src/views"}]}